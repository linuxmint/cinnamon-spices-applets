#!/usr/bin/python3

import os
import json

dirs_blacklist = [".git", ".github"]
repo_folder = os.path.realpath(os.path.abspath(os.path.join(
    os.path.normpath(os.path.join(os.getcwd(), *([".."] * 1))))))

initial_comment = """# Do not edit this file manually.
# Execute the script called codeowners_creator.py to generate it.

"""

donated_xlets_comment = """

# The following xlets have no author assigned to them.
"""


class Main():

    def __init__(self):
        xlets_list = []
        donated_xlets_list = []

        try:
            for name in os.listdir(repo_folder):
                if name in dirs_blacklist:
                    continue

                info_file_path = os.path.join(repo_folder, name, "info.json")

                if os.path.isfile(info_file_path):
                    with open(info_file_path, "r", encoding="UTF-8") as info_file:
                        raw_data = info_file.read()

                    try:
                        xlet_author = json.loads(raw_data)["author"]
                    except:
                        xlet_author = None

                    if xlet_author is not None:
                        if xlet_author == "none":
                            donated_xlets_list.append(f"# {name}")
                        else:
                            xlets_list.append(f"{name + '/**':<50} @{xlet_author}")
        finally:
            with open(os.path.join(repo_folder, ".github", "CODEOWNERS"), "w", encoding="UTF-8") as codeowners_file:
                file_content = "{}{}{}{}{}".format(
                    initial_comment,
                    "\n".join(sorted(xlets_list)),
                    donated_xlets_comment if len(donated_xlets_list) > 0 else "",
                    "\n".join(sorted(donated_xlets_list)),
                    "\n"
                )
                codeowners_file.write(file_content)

            codeowners_file.close()


if __name__ == "__main__":
    Main()
